bids_dir: '/path/to/bids_dir'
output_dir: '/path/to/output_dir'

#enable printing debug statements during parsing -- disable if generating dag visualization
debug: True

derivatives: True #will search in bids/derivatives if True; can also be path(s) to derivatives datasets

#list of analysis levels in the bids app 
analysis_levels: &analysis_levels
 - participant
  

#mapping from analysis_level to set of target rules or files
targets_by_analysis_level:
  participant:
    - ''  # if '', then the first rule is run

#this configures the pybids grabber - create an entry for each type of input you want to grab
# indexed by name of input
#   dictionary for each input is passed directly to pybids get()
#    https://bids-standard.github.io/pybids/generated/bids.layout.BIDSLayout.html#bids.layout.BIDSLayout.get

pybids_inputs:
  reverse_transform:
    filters:
      suffix: 'xfm'
      extension: '.h5'
      datatype: 'anat'
      scope: 'derivatives'
      from: 'MNI152NLin2009cAsym'
      to: 'T1w'
      invalid_filters: 'allow'
    wildcards:
      - subject
      - session
      - acquisition
      - task
      - run

  bold_volume:
    filters:
      suffix: 'bold'
      extension: '.nii.gz'
      datatype: 'func'
      scope: 'derivatives'
      space: 'MNI152NLin2009cAsym'
      invalid_filters: 'allow'
    wildcards:
        - subject
        - session
        - acquisition
        - task
        - run
        
  # surf:
  #   filters:
  #     suffix: 'midthickness'
  #     extension: '.surf.gii'
  #     space: 'T1w'
  #     scope: 'derivatives'
  #   wildcards:
  #     - subject
  #     - session
  #     - acquisition
  #     - hemi
  #     - den

#configuration for the command-line parameters to make available
# passed on the argparse add_argument()
parse_args:

#---  core BIDS-app options --- (do not modify below) 

  bids_dir:
    help: The directory with the input dataset formatted according 
          to the BIDS standard.

  output_dir:
    help: The directory where the output files 
          should be stored. If you are running group level analysis
          this folder should be prepopulated with the results of the
          participant level analysis.

  analysis_level: 
    help: Level of the analysis that will be performed. 
    choices: *analysis_levels

  --participant_label:
    help: The label(s) of the participant(s) that should be analyzed. The label 
          corresponds to sub-<participant_label> from the BIDS spec 
          (so it does not include "sub-"). If this parameter is not 
          provided all subjects should be analyzed. Multiple 
          participants can be specified with a space separated list.
    nargs: '+'

  --exclude_participant_label:
    help: The label(s) of the participant(s) that should be excluded. The label 
          corresponds to sub-<participant_label> from the BIDS spec 
          (so it does not include "sub-"). If this parameter is not 
          provided all subjects should be analyzed. Multiple 
          participants can be specified with a space separated list.
    nargs: '+'

  # --derivatives:
  #   help: 'Path(s) to a derivatives dataset, for folder(s) that contains multiple derivatives datasets (default: %(default)s) '
  #   required: False
  #   nargs: '+'

 # custom command-line parameters can then be added, these will get added to the config
 # below is an example to override config['bet_frac']
  --hippunfold_dir:
    help: The directory with completed hippunfold output.
    required: True

  # --hippunfold_space:
  #   help: Image space used for hippunfold.
  #   default: T2w
  #   choices:
  #     - T1w
  #     - T2w
  #     - hippb500
  #     - dwi
  #   required: True

  --fmri_clean_dir:
    help: Cleaned fmri data directory.
    required: False
  
  --fmriprep_dir:
    help: Path override for fmriprep direcotry.
    required: False
  
  --density:
    help: Define the densities of the hippocampal surfaces to extract gradients for either '2k', '7k' or both ('2k 7k'). Default is only 2k surface.
    default: 2k 
    choices:
      - 2k
      - 7k
    nargs: '+' 
    required: False

  --design:
    help:
    default: fc-36p
    choices:
      - anat-antsct
      - anat-complete
      - anat_jlf_complete
      - anat-minimal
      - basil
      - cbf_all
      - cbf
      - cbf_scorescrub
      - fc-24p
      - fc-24p_gsr
      - fc-36p_despike
      - fc-36p
      - fc-36_scrub
      - fc-36p_spkreg
      - fc-acompcor
      - fc-aroma
      - fc-tcompcor
      - task
    nargs: '+'
    required: False

  --hemi:
    help: Define the hemispheres of the hippocampus to run this pipeline with.
    default:
      - L
      - R
    choices:
      - L
      - R
    nargs: '+'
    required: False
  
  --task:
    help: Define task event for fMRI acquision.
    default: rest
    nargs: '+'
    required: False

  --reference_gradient:
    help: Passing reference gradient for allignment of subject gradients
    required: False
  

#--- workflow specific configuration -- below is just an example:

n_gradients: 10

# singularity:
#     ants: 'docker://kaczmarj/ants:2.3.4'
#     autotop: 'docker://khanlab/autotop_deps:nighres'
#     xcpengine: 'docker://pennbbl/xcpengine:1.2.4'

singularity:
  ants: '/scratch/myousif9/containers/ants_2.3.4.sif'
  autotop: '/scratch/myousif9/containers/autotop_deps_nighres.sif'
  xcpengine: '/project/ctb-akhanf/rhaast/01_Software/singularity/pennbbl_xcpengine_latest.sif'

fmri_cleaning_design:
  anat-antsct: resources/design/anat-antsct.dsn
  anat-complete: resources/design/anat-complete.dsn
  anat_jlf_complete: resources/design/anat_jlf_complete.dsn
  anat-minimal: resources/design/anat-minimal.dsn
  basil: resources/design/basil.dsn
  cbf_all: resources/design/cbf_all.dsn
  cbf_basil: resources/design/cbf_basil.dsn
  cbf: resources/design/cbf.dsn
  cbf_scorescrub: resources/design/cbf_scorescrub.dsn
  fc-24p: resources/design/fc-24p.dsn
  fc-24p_gsr: resources/design/fc-24_gsr.dsn
  fc-36p_despike: resources/design/fc-36p_despike.dsn
  fc-36p: resources/design/fc-36p.dsn
  fc-36_scrub: resources/design/fc-36_scrub.dsn
  fc-36p_spkreg: resources/design/fc-36p_spkreg.dsn
  fc-acompcor: resources/design/fc-acompcor.dsn
  fc-aroma: resources/design/fc-aroma.dsn
  fc-tcompcor: resources/design/fc-tcompcor.dsn
  task: resources/design/task.dsn
